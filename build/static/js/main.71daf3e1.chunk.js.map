{"version":3,"sources":["../node_modules/peerjs/dist sync","components/Button.tsx","components/InputField.tsx","pages/LoginPage.tsx","components/Header.tsx","hooks/useLocalStorage.ts","pages/JoinGamePage.tsx","components/PlayerBox.tsx","pages/CreateGamePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Button","color400","name","color","onClick","children","color600","colorClasses","className","type","event","InputField","onChange","placeholder","LoginPage","handleUserDataChange","useState","setName","roomId","setRoomId","target","value","toLowerCase","console","log","username","loginAction","Header","userData","LogoutButton","useLocalStorage","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","JoinGamePage","peerRef","useRef","Peer","peerIdRef","peerRoomConnRef","current","connect","useEffect","peer","on","roomPeerId","send","peerid","action","newConn","data","encouragementList","encouragment","setEncouragement","Math","floor","random","length","PlayerBox","playerData","selected","setColor","buzzStatus","getColorBy","points","CreateGamePage","playersTrackerRef","players","setPlayers","localPlayers","setLocalPlayers","selectedPlayer","setSelectedPlayer","firstBuzzTaken","lockStateRef","lockStateMessage","setLockStateMessage","updatePoints","pointsChange","playerToUpdate","currentPlayerPoints","peerId","timeLastBuzzed","Date","now","undefined","resetBuzzers","Object","values","sort","p1","p2","Number","map","player","xmlns","fill","viewBox","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","fill-rule","clip-rule","App","setUserData","CurrentPage","setCurrentPage","newUserData","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71daf3e1.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 14;","import { useState } from \"react\";\n\nfunction Button({\n  name,\n  color,\n  onClick,\n  children,\n}: {\n  name: string;\n  color?: string;\n  onClick?: Function;\n  children?: any;\n}) {\n  let color400,\n    color600 = \"\";\n  if (color && color === \"red\") {\n    color400 = \"bg-red-400\";\n    color600 = \"active:bg-red-600\";\n  } else if (color && color === \"green\") {\n    color400 = \"bg-green-400\";\n    color600 = \"active:bg-green-600\";\n  } else if (color && color === \"black\") {\n    color400 = \"bg-black\";\n    color600 = \"active:bg-gray-600\";\n  }\n  const colorClasses = color\n    ? `${color400} ${color600}`\n    : \"bg-blue-400 active:bg-blue-600\";\n  return (\n    <button\n      className={`\n        text-white font-bold uppercase text-sm px-6 py-3\n        rounded outline-none focus:outline-none mr-1 mb-1 ease-linear\n        transition-all duration-150 shadow hover:shadow-2xl\n        ${colorClasses}\n      `}\n      type=\"button\"\n      onClick={(event) => {\n        if (onClick) {\n          onClick(event);\n        }\n      }}\n    >\n      <div className=\"flex flex-row justify-center\">\n        {children}\n        {name}\n      </div>\n    </button>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\n\nfunction InputField({\n  name,\n  onChange,\n}: {\n  name: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}) {\n  return (\n    <div className=\"flex flex-row items-center\">\n      <span className=\"w-1/3 text-lg font-bold\">{name}</span>\n      <input\n        type=\"text\"\n        onChange={onChange}\n        placeholder={name}\n        className=\"max-w-lg px-3 py-4 placeholder-blueGray-700 text-blueGray-600 relative bg-white bg-white rounded text-base border-0 shadow outline-none focus:outline-none focus:ring w-full\"\n      />\n    </div>\n  );\n}\n\nexport default InputField;\n","import React, { useRef, useState } from \"react\";\nimport Button from \"components/Button\";\nimport InputField from \"components/InputField\";\n\n// TODO: Change any to function with (userData: UserData) -> void args\nfunction LoginPage({ handleUserDataChange }: { handleUserDataChange: any }) {\n  // I could use a useRef here to be more efficient but decided to use a\n  // useState to avoid having to figure out how to pass down the ref to the\n  // InputField component\n  const [name, setName] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n\n  function handleJoinGame() {\n    handleUserDataChange({\n      username: name,\n      roomId: roomId,\n      loginAction: \"JoinGame\",\n    });\n  }\n  function handleCreateNewGame() {\n    console.log(\"CREATE new\");\n    handleUserDataChange({\n      username: name,\n      roomId: roomId,\n      loginAction: \"CreateGame\",\n    });\n  }\n  return (\n    <>\n      <div className=\"h-screen flex flex-col space-y-4 justify-center items-center\">\n        <div className=\"bg-purple-300 md:w-1/3 max-w-lg px-4 py-8 rounded shadow-lg\">\n          <InputField\n            name=\"Your Name\"\n            onChange={(event) => setName(event.target.value)}\n          />\n          <br />\n          <InputField\n            name=\"Room Id\"\n            onChange={(event) => {\n              setRoomId(event.target.value.toLowerCase());\n            }}\n          ></InputField>\n        </div>\n        <div className=\"flex flex-row space-x-8\">\n          <Button\n            name=\"Create New Game\"\n            onClick={() => handleCreateNewGame()}\n          ></Button>\n          <Button name=\"Join Game\" onClick={() => handleJoinGame()}></Button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LoginPage;\n","import Button from \"components/Button\";\nimport { UserData } from \"types\";\n\nfunction Header({\n  userData,\n  handleUserDataChange,\n}: {\n  userData: UserData;\n  handleUserDataChange: any;\n}) {\n  function logout() {\n    handleUserDataChange({\n      username: \"\",\n      roomId: userData.roomId,\n      loginAction: \"NotLoggedIn\",\n    });\n  }\n  const LogoutButton = <Button name=\"Logout\" color=\"black\" onClick={logout} />;\n\n  return (\n    <div className=\"h-16 bg-purple-400 flex justify-center items-center\">\n      <span className=\"text-3xl font-sans font-extrabold flex-grow\">\n        Jeoparty\n      </span>\n      {userData.loginAction !== \"NotLoggedIn\" ? LogoutButton : \"\"}\n    </div>\n  );\n}\n\nexport default Header;\n","import { useState } from \"react\";\n\n// Hook\n// TODO: Make this a \"singleton\" every time local storage values are accessed\nexport function useLocalStorage(key: string, initialValue: any) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: any) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n}","import Button from \"components/Button\";\nimport Peer from \"peerjs\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { UserData } from \"types\";\nimport { setConstantValue } from \"typescript\";\n\nexport default function JoinGamePage({ userData }: { userData: UserData }) {\n  // TODO: Figure out how to keep the same peerId if the browser refreshes\n  // const [userPeerId, setUserPeerId] = useLocalStorage(\"userPeerId\", \"\");\n  let peerRef = useRef<Peer>(new Peer());\n  let peerIdRef = useRef<string>();\n\n  let peerRoomConnRef = useRef<Peer.DataConnection>(\n    peerRef.current.connect(userData.roomId)\n    // (() => {\n    //   console.log(\"hello\");\n    //   return peerRef.current.connect(userData.roomId);\n    // })()\n  );\n\n  useEffect(() => {\n    const peer = peerRef.current;\n    peer.on(\"open\", function (id) {\n      console.log(\"Peer connection opened\");\n      console.log(\"Generated peerid\");\n      console.log(id);\n\n      peerIdRef.current = id;\n      const roomPeerId = userData.roomId;\n      console.log(\"Sending test to \", roomPeerId);\n      peerRoomConnRef.current = peer.connect(roomPeerId);\n      peerRoomConnRef.current.on(\"open\", function () {\n        peerRoomConnRef.current.send({\n          name: userData.username,\n          peerid: peerIdRef.current,\n          action: \"CONNECTION\",\n        });\n      });\n    });\n    //receive\n    peer.on(\"connection\", function (newConn) {\n      console.log(\"Connection made\");\n      console.log(newConn);\n      newConn.on(\"open\", function () {\n        newConn.on(\"data\", function (data) {\n          console.log(\"Received\");\n          console.log(data);\n          console.log(peer);\n        });\n      });\n    });\n\n    return () => {\n      console.log(\"Component Unmounted\");\n    };\n  }, []);\n\n  const encouragementList = [\n    \"awesome\",\n    \"admirable\",\n    \"amazing\",\n    \"beautiful\",\n    \"brilliant\",\n    \"cool\",\n    \"delightful\",\n    \"excellent\",\n    \"exceptional\",\n    \"extraordinary\",\n    \"fabulous\",\n    \"fantastic\",\n    \"first-class\",\n    \"glorious\",\n    \"good\",\n    \"grand\",\n    \"great\",\n    \"impressive\",\n    \"incredible\",\n    \"magnificent\",\n    \"marvellous\",\n    \"out of this world\",\n    \"outstanding\",\n    \"remarkable\",\n    \"spectacular\",\n    \"splendid\",\n    \"stellar\",\n    \"superb\",\n    \"swell\",\n    \"terrific\",\n    \"tip-top\",\n    \"top-notch\",\n    \"tremendous\",\n    \"wonderful\",\n  ];\n\n  function sendBuzz() {\n    setEncouragement(\n      encouragementList[Math.floor(Math.random() * encouragementList.length)]\n    );\n    peerRoomConnRef.current.send({\n      name: userData.username,\n      peerid: peerIdRef.current,\n      action: \"BUZZ\",\n    });\n  }\n  const [encouragment, setEncouragement] = useState(\"awesome\");\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <span className=\"text-xl my-14   font-bold font-sans\">\n        Hey {userData.username}, you're {encouragment}!\n      </span>\n      <button\n        className=\"rounded-full max-w-4xl w-72 h-72 text-white text-4xl font-bold bg-blue-400\n        active:bg-blue-600 ease-linear transition-all duration-150 shadow\n          hover:shadow-2xl focus:outline-none \"\n        onClick={sendBuzz}\n      >\n        Buzz Buzz <br />\n        Bee\n      </button>\n    </div>\n  );\n}\n","import { MouseEventHandler, useEffect, useState } from \"react\";\nimport { BuzzStatus, PlayerData } from \"types\";\n\nexport default function PlayerBox({\n  playerData,\n  selected,\n  onClick,\n}: {\n  playerData: PlayerData;\n  selected: Boolean;\n  onClick: MouseEventHandler<HTMLDivElement>;\n}) {\n  const [color, setColor] = useState(\"bg-gray-300\");\n\n  function getColorBy(buzzStatus: BuzzStatus) {\n    if (\n      playerData.buzzStatus === \"Locked\" ||\n      playerData.buzzStatus === \"NotBuzzed\"\n    ) {\n      return \"bg-gray-300\";\n    } else if (playerData.buzzStatus === \"Buzzed\") {\n      return \"bg-blue-300\";\n    } else if (playerData.buzzStatus === \"Wrong\") {\n      return \"bg-red-300\";\n    } else {\n      throw Error(`Buzz Status for player is not supported: ${buzzStatus}`);\n    }\n  }\n  useEffect(() => {\n    setColor(getColorBy(playerData.buzzStatus));\n  }, [playerData]);\n\n  return (\n    <div\n      className={`px-4 py-2 m-1 rounded min-w-full\n        ${color}\n        ${selected ? \"border-2 border-black\" : \"\"}\n      `}\n      onClick={onClick}\n    >\n      <b>\n        {playerData.name}:{\" \"}\n        <span\n          className={playerData.points >= 0 ? \"text-green-800\" : \"text-red-500\"}\n        >\n          {playerData.points}\n        </span>\n      </b>\n    </div>\n  );\n}\n","import Peer from \"peerjs\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocalStorage } from \"hooks/useLocalStorage\";\nimport { PlayerData, UserData } from \"types\";\nimport PlayerBox from \"components/PlayerBox\";\nimport Button from \"components/Button\";\n\nexport default function CreateGamePage({ userData }: { userData: UserData }) {\n  /*\n  Players [\n    name: lskdjf\n    peerid: sdlkjf\n    last-buzzed: lskdfj\n    buzz-status: \"locked\", \"notbuzzed\", \"buzzed\"\n    time-last-buzzed: oiweulkjasdf\n  ]\n  selected: playername\n   */\n  const playersTrackerRef = useRef<Record<string, PlayerData>>({});\n  const [players, setPlayers] = useState<Record<string, PlayerData>>({});\n  const [localPlayers, setLocalPlayers] = useLocalStorage(\"localPlayers\", {});\n\n  const [selectedPlayer, setSelectedPlayer] = useState<string>();\n  const firstBuzzTaken = useRef<boolean>(false);\n\n  type LockStateMessage = \"Unlock Buzzers\" | \"Lock Buzzers\";\n  type LockState = \"Unlocked\" | \"Locked\";\n  const lockStateRef = useRef<LockState>(\"Unlocked\");\n  const [lockStateMessage, setLockStateMessage] =\n    useState<LockStateMessage>(\"Lock Buzzers\");\n\n  //receive\n  useEffect(() => {\n    // Restore player data from local storge on page refresh\n    if (localPlayers) {\n      playersTrackerRef.current = { ...localPlayers };\n      setPlayers({ ...playersTrackerRef.current });\n    }\n\n    // const peer = peerRef.current;\n    const peer = new Peer(userData.roomId);\n    peer.on(\"open\", function (id) {\n      console.log(\"Peer connection opened\");\n    });\n    peer.on(\"connection\", function (newConn) {\n      console.log(\"Connection made\");\n      console.log(newConn);\n      newConn.on(\"open\", function () {\n        newConn.on(\"data\", function (data) {\n          //TODO: Add type for data\n          // HACK use a useRef to keep track of data\n          // duplicated, but I don't want to re-create\n          // the peer connection listener (which)\n          console.log(\"GETTING CONNECTION FROM\", data.peerid);\n          if (data.action === \"BUZZ\" && lockStateRef.current === \"Unlocked\") {\n            playersTrackerRef.current[data.name] = {\n              name: data.name,\n              peerId: data.peerId,\n              buzzStatus: \"Buzzed\",\n              points: playersTrackerRef.current[data.name]?.points\n                ? playersTrackerRef.current[data.name].points\n                : 0,\n              timeLastBuzzed: playersTrackerRef.current[data.name]\n                .timeLastBuzzed\n                ? playersTrackerRef.current[data.name].timeLastBuzzed\n                : Date.now(),\n            };\n            console.log(\"FIRST BUZZ STATUS\");\n            if (!firstBuzzTaken.current) {\n              setSelectedPlayer(data.name);\n              firstBuzzTaken.current = true;\n            }\n            setPlayers({ ...playersTrackerRef.current });\n            setLocalPlayers({ ...playersTrackerRef.current });\n          } else if (data.action === \"CONNECTION\") {\n            playersTrackerRef.current[data.name] = {\n              name: data.name,\n              peerId: data.peerId,\n              buzzStatus: \"NotBuzzed\",\n              points: playersTrackerRef.current[data.name]?.points\n                ? playersTrackerRef.current[data.name].points\n                : 0,\n              timeLastBuzzed: undefined,\n            };\n            setPlayers({ ...playersTrackerRef.current });\n            setLocalPlayers({ ...playersTrackerRef.current });\n          } else {\n            console.log(\n              \"Incoming request has no recognized action field\",\n              data\n            );\n          }\n        });\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    console.log(\"Component mounted\");\n    return () => {\n      console.log(\"Component unmounted\");\n    };\n  }, []);\n  function updatePoints(pointsChange: number) {\n    /*\n    Get value from the event\n    Get the current selected person name\n    Get the person object and the ref\n    Update the points for that person ref\n    Connect to the person peer object, and send them their updated score\n    */\n    console.log(\"UPDATE POINTS\");\n    if (!selectedPlayer) {\n      return;\n    }\n\n    let playerToUpdate = playersTrackerRef.current[selectedPlayer];\n    const currentPlayerPoints = playerToUpdate.points || 0;\n\n    playersTrackerRef.current[selectedPlayer] = {\n      ...playerToUpdate,\n      points: currentPlayerPoints + pointsChange,\n    };\n    setPlayers({ ...playersTrackerRef.current });\n    setLocalPlayers({ ...playersTrackerRef.current });\n  }\n\n  useEffect(() => {\n    // when buzzers become unlocked, the new state is lock\n    if (lockStateMessage === \"Lock Buzzers\") {\n      // when buzzers become locked, the new state is unlock\n    } else if (lockStateMessage === \"Unlock Buzzers\") {\n      resetBuzzers();\n    } else {\n      console.log(\"Unrecognized lockStateMessage: \", lockStateMessage);\n    }\n  }, [lockStateMessage]);\n\n  function resetBuzzers() {\n    /*Reset buzzer */\n    console.log(\"Reset buzzers\");\n    for (const key in playersTrackerRef.current) {\n      playersTrackerRef.current[key] = {\n        ...playersTrackerRef.current[key],\n        buzzStatus: \"Locked\",\n        timeLastBuzzed: undefined,\n      };\n    }\n    firstBuzzTaken.current = false;\n    setSelectedPlayer(\"\");\n    setLockStateMessage(\"Unlock Buzzers\");\n    setPlayers({ ...playersTrackerRef.current });\n    setLocalPlayers({ ...playersTrackerRef.current });\n  }\n\n  return (\n    <div className=\"flex flex-col items-center min-w-full\">\n      <span className=\"text-xl my-4 font-bold font-sans\">\n        ROOM ID: {userData.roomId}\n        <br />\n      </span>\n      <div className=\"flex flex-row px-4 min-w-full\">\n        <div className=\"md:flex-grow\"></div>\n        <div className=\"flex-grow flex flex-col max-w-lg px-4\">\n          <span className=\"font-bold underline\">Contestants</span>\n          {Object.values(players)\n            .sort((p1, p2) => {\n              if (\n                p1.buzzStatus === \"Buzzed\" &&\n                p2.buzzStatus === \"Buzzed\" &&\n                p1.timeLastBuzzed !== undefined &&\n                p2.timeLastBuzzed !== undefined\n              ) {\n                return p1.timeLastBuzzed - p2.timeLastBuzzed;\n              } else if (p2.buzzStatus === \"Buzzed\") {\n                return 1;\n              } else if (p1.buzzStatus === \"Buzzed\") {\n                return -1;\n              } else if (Number(p2.points || 0) < Number(p1.points || 0)) {\n                return -1;\n              } else if (Number(p2.points || 0) > Number(p1.points || 0)) {\n                return 1;\n              } else {\n                return p2.name.toLowerCase() < p1.name.toLowerCase() ? 1 : -1; // alphabetical\n              }\n              // TODO: Add Wrong Status sorting\n            })\n            .map((player) => (\n              <PlayerBox\n                playerData={player}\n                onClick={() => {\n                  setSelectedPlayer(player.name);\n                }}\n                selected={selectedPlayer === player.name}\n              />\n            ))}\n        </div>\n        <div className=\"flex-grow px-4\">\n          <div className=\"flex flex-col items-center w-full\">\n            <span className=\"font-bold underline\">Control Panel</span>\n\n            {lockStateMessage === \"Lock Buzzers\" ? (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-10 w-10\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 11V7a4 4 0 118 0m-4 8v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z\"\n                />\n              </svg>\n            ) : (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-10 w-10\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n            )}\n            <Button\n              name={lockStateMessage}\n              onClick={() => {\n                lockStateRef.current =\n                  lockStateMessage === \"Lock Buzzers\" ? \"Locked\" : \"Unlocked\";\n                setLockStateMessage(\n                  lockStateMessage === \"Lock Buzzers\"\n                    ? \"Unlock Buzzers\"\n                    : \"Lock Buzzers\"\n                );\n              }}\n            />\n            <div className=\"flex flex-row w-full\">\n              <div className=\"flex-grow flex flex-col\">\n                <span className=\"font-bold\">Wrong</span>\n                <Button\n                  name=\"-200\"\n                  color=\"red\"\n                  onClick={() => updatePoints(-200)}\n                />\n                <Button\n                  name=\"-400\"\n                  color=\"red\"\n                  onClick={() => updatePoints(-400)}\n                />\n                <Button\n                  name=\"-600\"\n                  color=\"red\"\n                  onClick={() => updatePoints(-600)}\n                />\n                <Button\n                  name=\"-800\"\n                  color=\"red\"\n                  onClick={() => updatePoints(-800)}\n                />\n                <Button\n                  name=\"-1000\"\n                  color=\"red\"\n                  onClick={() => updatePoints(-1000)}\n                />\n              </div>\n              <div className=\"flex-grow flex flex-col\">\n                <span className=\"font-bold\">Right</span>\n                <Button\n                  name=\"200\"\n                  color=\"green\"\n                  onClick={() => updatePoints(200)}\n                />\n                <Button\n                  name=\"400\"\n                  color=\"green\"\n                  onClick={() => updatePoints(400)}\n                />\n                <Button\n                  name=\"600\"\n                  color=\"green\"\n                  onClick={() => updatePoints(600)}\n                />\n                <Button\n                  name=\"800\"\n                  color=\"green\"\n                  onClick={() => updatePoints(800)}\n                />\n                <Button\n                  name=\"1000\"\n                  color=\"green\"\n                  onClick={() => updatePoints(1000)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"md:flex-grow\"></div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport LoginPage from \"pages/LoginPage\";\nimport Header from \"components/Header\";\nimport { useLocalStorage } from \"hooks/useLocalStorage\";\nimport { UserData } from \"types\";\nimport JoinGamePage from \"pages/JoinGamePage\";\nimport CreateGamePage from \"pages/CreateGamePage\";\n\nfunction App() {\n  const [userData, setUserData] = useLocalStorage(\"userData\", {\n    loginAction: \"NotLoggedIn\",\n  });\n  const [CurrentPage, setCurrentPage] = useState(<div>400</div>);\n\n  function handleUserDataChange(newUserData: UserData) {\n    setUserData(newUserData);\n  }\n\n  useEffect(() => {\n    console.log(\"UseEffect triggerd\");\n    if (userData.loginAction === \"NotLoggedIn\") {\n      setCurrentPage(<LoginPage handleUserDataChange={handleUserDataChange} />);\n    } else if (userData.loginAction === \"JoinGame\") {\n      setCurrentPage(<JoinGamePage userData={userData} />);\n    } else if (userData.loginAction === \"CreateGame\") {\n      setCurrentPage(<CreateGamePage userData={userData} />);\n    } else {\n      console.log(\n        \"ERROR: No loginAction not recognized: \\n\" +\n          `userData: ${userData}\\n` +\n          `loginAction: ${userData.loginAction}`\n      );\n    }\n  }, [userData]);\n\n  return (\n    <div className=\"App\">\n      <Header userData={userData} handleUserDataChange={handleUserDataChange} />\n      {CurrentPage}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}